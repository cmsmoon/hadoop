#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require File.dirname(__FILE__) + '/hdfs_types'

        module Hadoop
          module API
            module Datanode
              class Client
                include ::Thrift::Client

                def readBlock(block, offset, length)
                  send_readBlock(block, offset, length)
                  return recv_readBlock()
                end

                def send_readBlock(block, offset, length)
                  send_message('readBlock', ReadBlock_args, :block => block, :offset => offset, :length => length)
                end

                def recv_readBlock()
                  result = receive_message(ReadBlock_result)
                  return result.success unless result.success.nil?
                  raise result.err unless result.err.nil?
                  raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'readBlock failed: unknown result')
                end

              end

              class Processor
                include ::Thrift::Processor

                def process_readBlock(seqid, iprot, oprot)
                  args = read_args(iprot, ReadBlock_args)
                  result = ReadBlock_result.new()
                  begin
                    result.success = @handler.readBlock(args.block, args.offset, args.length)
                  rescue Hadoop::API::IOException => err
                    result.err = err
                  end
                  write_result(result, oprot, 'readBlock', seqid)
                end

              end

              # HELPER FUNCTIONS AND STRUCTURES

              class ReadBlock_args
                include ::Thrift::Struct
                BLOCK = 1
                OFFSET = 2
                LENGTH = 3

                ::Thrift::Struct.field_accessor self, :block, :offset, :length
                FIELDS = {
                  # Block to be read from.
                  BLOCK => {:type => ::Thrift::Types::STRUCT, :name => 'block', :class => Hadoop::API::Block},
                  # Offset within the block where read must start from.
                  OFFSET => {:type => ::Thrift::Types::I64, :name => 'offset'},
                  # Number of bytes to read.
                  LENGTH => {:type => ::Thrift::Types::I32, :name => 'length'}
                }

                def struct_fields; FIELDS; end

                def validate
                end

              end

              class ReadBlock_result
                include ::Thrift::Struct
                SUCCESS = 0
                ERR = 1

                ::Thrift::Struct.field_accessor self, :success, :err
                FIELDS = {
                  SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => Hadoop::API::BlockData},
                  ERR => {:type => ::Thrift::Types::STRUCT, :name => 'err', :class => Hadoop::API::IOException}
                }

                def struct_fields; FIELDS; end

                def validate
                end

              end

            end

          end
        end
